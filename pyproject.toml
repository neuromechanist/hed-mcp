[project]
name = "hed-mcp"
dynamic = ["version"]
description = "A Model Context Protocol (MCP) server for HED (Hierarchical Event Descriptors) integration"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Seyed Yahya Shirazi", email = "shirazi@ieee.org" },
]
maintainers = [
    { name = "Seyed Yahya Shirazi", email = "shirazi@ieee.org" },
]
keywords = [
    "hed",
    "hierarchical-event-descriptors",
    "mcp",
    "model-context-protocol",
    "bids",
    "neuroscience",
    "eeg",
    "annotation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.21.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "mcp>=1.8.0",
    "hedtools>=0.5.0",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/neuromechanist/hed-mcp"
Documentation = "https://github.com/neuromechanist/hed-mcp/blob/main/docs/"
Repository = "https://github.com/neuromechanist/hed-mcp.git"
"Bug Tracker" = "https://github.com/neuromechanist/hed-mcp/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/hed_tools"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["hed_tools"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src/hed_tools --cov-report=html --cov-report=term-missing --strict-markers"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselected with -m 'not slow')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ruff>=0.11.12",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
packages = ["hed_tools"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.coverage.paths]
source = ["src/hed_tools"]
